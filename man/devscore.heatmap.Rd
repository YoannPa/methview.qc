% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qc_plot.R
\name{devscore.heatmap}
\alias{devscore.heatmap}
\title{Plots QC deviation heatmaps based on samples fluorescence deviation score.}
\usage{
devscore.heatmap(
  RnBSet,
  target = NULL,
  samples = NULL,
  dist.col = "manhattan",
  annot.grps = NULL,
  annot.pal = NULL,
  annot.size = 1,
  show.annot = FALSE,
  dend.size = 1,
  theme_legend = NULL,
  lgd.width = 1,
  ncores = 1,
  draw = TRUE,
  verbose = FALSE
)
}
\arguments{
\item{RnBSet}{A \code{RnBSet} basic object for storing methylation array
data and experimental quality information (Bisulfite data
not supported).
\itemize{
 \item{For more information about RnBSet object read
 \link[RnBeads]{RnBSet-class}.}
 \item{To create an RnBSet object run
 \link[RnBeads]{rnb.execute.import}.}
 \item{For additionnal options to import methylation array
 data in the RnBSet see options available in
 \link[RnBeads]{rnb.options}.}
}}

\item{target}{A \code{character} string specifying the QC target type.
Each 'target' matches a specific step in Illumina array
methods. Supported values:
target = c("Bisulfite Conversion I",
"Bisulfite Conversion II", "Extension", "Hybridization",
"Negative", "Non-polymorphic", "Norm A", "Norm C",
"Norm G", "Norm T", "Restoration", "Specificity I",
"Specificity II", "Staining", "Target Removal", NULL). If
target is NULL, quality control probes from all targets
will be considered (Default: target = NULL).}

\item{samples}{A \code{character} vector specifying the samples to include
for the deviation score calculation. You can catch the
sample IDs you wish to evaluate running
\code{RnBSet@pheno[,1]}. If samples is NULL, all samples in
RnBSet will be considered (Default: samples = NULL).}

\item{dist.col}{A \code{character} to specify the distance methods to be
used for clustering data on columns and plot dendrogram on 
columns (Default: dist.col = "manhattan").}

\item{annot.grps}{A \code{list} of vectors of groups to which variables
belongs for the annotation sidebars. Vectors' lengths have
to match the number of variables.}

\item{annot.pal}{A \code{vector} or a list of vectors containing colors as
characters for the annotation sidebars. The length of
vectors has to match the number of levels of vectors listed
in 'annot.grps'.
\itemize{
 \item{If annot.pal is a list: its length must match the
 length of the list provided to 'annot.grps'.}
 \item{If annot.pal is a vector: make sure that the levels
 content of annotations listed in 'annot.grps' is the same,
 and that no annotation contains less or more levels than
 another one in 'annot.grps'.}
}}

\item{annot.size}{A \code{numeric} defining the width of the annotation bars
(Default: annot.size = 1).}

\item{show.annot}{A \code{logical} to specify whether annotations should be
displayed at the top of the heatmap (show.annot = TRUE) or
not (show.annot = FALSE).}

\item{dend.size}{A \code{numeric} defining columns dendrogram size
(Default: dend.size = 1).}

\item{theme_legend}{A ggplot2 \code{theme} to specify any theme parameter you
wish to custom on legends (Default: theme_legend = NULL).
For more information about how to define a theme, see
\link[ggplot2]{theme}.}

\item{lgd.width}{A \code{numeric} specifying the width of the legend space
(Default: lgd.space.width = 1).}

\item{ncores}{An \code{integer} specifying the number of cores or threads
to be used for parallel processing.}

\item{draw}{A \code{logical} to specify whether the final heatmap
should be drawn automatically when gg2heatmap() execution
ends (draw = TRUE), or if it shouldn't (draw = FALSE).}

\item{verbose}{A \code{logical} to display information about the
step-by-step processing of the data if TRUE
(Default: verbose = FALSE).}
}
\value{
A \code{grob} of the computed heatmap. If draw = FALSE, you can draw
        the plot using the grid::grid.draw() function on the grob.
}
\description{
Plots QC deviation heatmaps based on samples fluorescence deviation score.
}
\details{
For more information about how the fluorescence deviation score is
         calculated, please refer to the details section of
         \link{devscore.fluo}.
}
\examples{
# Create an RnBSet for HM450K data (May take up to 1 minute)
require(Biobase)
idat.dir <- system.file("extdata", package = "minfiData")
sample.annotation <- system.file(
    "extdata", "SampleSheet.csv", package = "minfiData")
data.source <- c(idat.dir, sample.annotation)
rnb.set <- RnBeads::rnb.execute.import(
    data.source = data.source, data.type = "idat.dir")
#Draw deviation score heatmaps for green and red channels
dev.heatmap <- devscore.heatmap(
    RnBSet = rnb.set, annot.grps = list( # To add annotation bars at the top
        "Groups" = rnb.set@pheno$Sample_Group, "Sex" = rnb.set@pheno$sex),
    annot.pal = list( # To map palettes to previously mentionned annotations
        c("orange", "purple"), c("lightblue", "pink")),
    show.annot = TRUE, # To make all top annotations visible
    annot.size = 2, # Width of the annotation bars
    theme_legend = theme(
        legend.justification = c(0,1))) # To align all annotation legends
#If 'draw' is set to FALSE you can plot heatmap as following
grid::grid.newpage()
grid::grid.draw(dev.heatmap)

# The function also work with MethylationEPIC data
require(Biobase)
idat.dir <- system.file("extdata", package = "minfiDataEPIC")
sample.annotation <- system.file(
    "extdata", "SampleSheet.csv", package = "minfiDataEPIC")
data.source <- c(idat.dir, sample.annotation)
rnb.set <- RnBeads::rnb.execute.import(
    data.source = data.source, data.type = "idat.dir")
dev.heatmap <- devscore.heatmap(
    RnBSet = rnb.set,
    annot.grps = list("Groups" = rnb.set@pheno$Sample_Group),
    annot.pal = list(c("orange", "purple", "pink")), show.annot = TRUE)
}
\author{
Yoann Pageaud.
}
